{"version":3,"sources":["../server/server.js"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","require","compression","typeorm_1","express","http","morgan","bodyParser","cookieParser","path","api","routes_1","PORT","process","env","createConnection","connection","app","use","json","static","join","__dirname","get","req","res","sendFile","header","AppRoutes","forEach","route","method","request","response","action","catch","err","server","createServer","listen","console","log","error"],"mappings":"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","file":"server.js","sourcesContent":["\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nrequire(\"reflect-metadata\");\r\nconst compression = require(\"compression\");\r\nconst typeorm_1 = require(\"typeorm\");\r\nconst express = require(\"express\");\r\nconst http = require(\"http\");\r\nconst morgan = require(\"morgan\");\r\nconst bodyParser = require(\"body-parser\");\r\nconst cookieParser = require(\"cookie-parser\");\r\nconst path = require(\"path\");\r\nconst api = require(\"./api\");\r\nconst routes_1 = require(\"./src/routes\");\r\n// import * as Notifier from './notifier';\r\nconst PORT = process.env.PORT || 8102;\r\n// let notifier = new Notifier();\r\n// addNotifier(\r\n//   'task',\r\n//   (task) => {\r\n//     // this can be invoked multiple times as new requests happen\r\n//     notifier.test((request) => {\r\n//       // we should skip notify if the id of the task does not match the payload\r\n//       if (request.path === '/api/task/:id' && request.params.id !== task.id) {\r\n//         return false;\r\n//       }\r\n//       return true;\r\n//     });\r\n//   }\r\n// );\r\n// notifier.use('/api/task', () => getTasks());\r\n// notifier.use('/api/task/:id', param => (\r\n//   getTask(param.id).then((result) => {\r\n//     if (!result.task) {\r\n//       return Promise.reject({ statusCode: 404, message: 'Not Found' });\r\n//     }\r\n//     return Promise.resolve(result);\r\n//   })\r\n// ));\r\n// create connection with database\r\n// note that it's not active database connection\r\n// TypeORM creates connection pools and uses them for your requests\r\ntypeorm_1.createConnection().then((connection) => __awaiter(this, void 0, void 0, function* () {\r\n    // create express app\r\n    const app = express()\r\n        .use(compression())\r\n        .use(cookieParser())\r\n        .use(morgan('tiny'))\r\n        .use(bodyParser.json());\r\n    // REST API\r\n    app.use('/api', api);\r\n    // UI\r\n    app.use('/', express.static(path.join(__dirname, '/../dist')));\r\n    app.get('/*', (req, res) => {\r\n        res.sendFile(path.resolve(path.join(__dirname, '/../dist/index.html')));\r\n    });\r\n    // temporary local development concern addressed\r\n    app.use(function (req, res, next) {\r\n        res.header(\"Access-Control-Allow-Origin\", \"*\");\r\n        res.header(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept\");\r\n        next();\r\n    });\r\n    // register all application routes\r\n    routes_1.AppRoutes.forEach(route => {\r\n        app[route.method](route.path, (request, response, next) => {\r\n            route.action(request, response)\r\n                .then(() => next)\r\n                .catch(err => next(err));\r\n        });\r\n    });\r\n    const server = http.createServer(app);\r\n    server.listen(PORT);\r\n    // notifier.listen(server);\r\n    console.log(`Server started at http://localhost:${PORT}`);\r\n    // // run app\r\n    // const port = 3005;\r\n    // app.listen(port);\r\n    // console.log(\"Express application is up and running on port \" + port);\r\n})).catch(error => console.log(\"TypeORM connection error: \", error));\r\n//# sourceMappingURL=server.js.map"]}