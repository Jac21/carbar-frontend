{"version":3,"sources":["../../../server/src/controller/PostGetByIdAction.js"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","typeorm_1","require","Post_1","postGetByIdAction","request","response","postRepository","getManager","getRepository","Post","findOne","params","id","post","status","end","send"],"mappings":"AAAA;;;;;;;;AACA,IAAIA,YAAa,aAAQ,UAAKA,SAAd,IAA4B,UAAUC,OAAV,EAAmBC,UAAnB,EAA+BC,CAA/B,EAAkCC,SAAlC,EAA6C;AACrF,WAAO,KAAKD,MAAMA,IAAIE,OAAV,CAAL,EAAyB,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AACvD,iBAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAE,gBAAI;AAAEC,qBAAKN,UAAUO,IAAV,CAAeF,KAAf,CAAL;AAA8B,aAApC,CAAqC,OAAOG,CAAP,EAAU;AAAEL,uBAAOK,CAAP;AAAY;AAAE;AAC3F,iBAASC,QAAT,CAAkBJ,KAAlB,EAAyB;AAAE,gBAAI;AAAEC,qBAAKN,UAAU,OAAV,EAAmBK,KAAnB,CAAL;AAAkC,aAAxC,CAAyC,OAAOG,CAAP,EAAU;AAAEL,uBAAOK,CAAP;AAAY;AAAE;AAC9F,iBAASF,IAAT,CAAcI,MAAd,EAAsB;AAAEA,mBAAOC,IAAP,GAAcT,QAAQQ,OAAOL,KAAf,CAAd,GAAsC,IAAIN,CAAJ,CAAM,UAAUG,OAAV,EAAmB;AAAEA,wBAAQQ,OAAOL,KAAf;AAAwB,aAAnD,EAAqDO,IAArD,CAA0DR,SAA1D,EAAqEK,QAArE,CAAtC;AAAuH;AAC/IH,aAAK,CAACN,YAAYA,UAAUa,KAAV,CAAgBhB,OAAhB,EAAyBC,cAAc,EAAvC,CAAb,EAAyDS,IAAzD,EAAL;AACH,KALM,CAAP;AAMH,CAPD;AAQAO,OAAOC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C,EAAEX,OAAO,IAAT,EAA7C;AACA,IAAMY,YAAYC,QAAQ,SAAR,CAAlB;AACA,IAAMC,SAASD,QAAQ,gBAAR,CAAf;AACA;;;AAGA,SAASE,iBAAT,CAA2BC,OAA3B,EAAoCC,QAApC,EAA8C;AAC1C,WAAO1B,UAAU,IAAV,EAAgB,KAAK,CAArB,EAAwB,KAAK,CAA7B,0CAAgC;AAAA;AAAA;AAAA;AAAA;AAAA;AACnC;AACM2B,sCAF6B,GAEZN,UAAUO,UAAV,GAAuBC,aAAvB,CAAqCN,OAAOO,IAA5C,CAFY;AAGnC;;AAHmC;AAAA,+BAIhBH,eAAeI,OAAf,CAAuBN,QAAQO,MAAR,CAAeC,EAAtC,CAJgB;;AAAA;AAI7BC,4BAJ6B;;AAAA,4BAM9BA,IAN8B;AAAA;AAAA;AAAA;;AAO/BR,iCAASS,MAAT,CAAgB,GAAhB;AACAT,iCAASU,GAAT;AAR+B;;AAAA;AAWnC;AACAV,iCAASW,IAAT,CAAcH,IAAd;;AAZmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAhC,EAAP;AAcH;AACDd,QAAQI,iBAAR,GAA4BA,iBAA5B;AACA","file":"PostGetByIdAction.js","sourcesContent":["\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst typeorm_1 = require(\"typeorm\");\r\nconst Post_1 = require(\"../entity/Post\");\r\n/**\r\n * Loads post by a given id.\r\n */\r\nfunction postGetByIdAction(request, response) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        // get a post repository to perform operations with post\r\n        const postRepository = typeorm_1.getManager().getRepository(Post_1.Post);\r\n        // load a post by a given post id\r\n        const post = yield postRepository.findOne(request.params.id);\r\n        // if post was not found return 404 to the client\r\n        if (!post) {\r\n            response.status(404);\r\n            response.end();\r\n            return;\r\n        }\r\n        // return loaded post\r\n        response.send(post);\r\n    });\r\n}\r\nexports.postGetByIdAction = postGetByIdAction;\r\n//# sourceMappingURL=PostGetByIdAction.js.map"]}