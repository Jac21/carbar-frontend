{"version":3,"sources":["../../../server/src/controller/MessageController.js"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","typeorm_1","require","User_1","sensitive_1","sensitive_2","MessageController","request","response","userRepository","getManager","getRepository","User","find","users","https","googleMapsApiEndpoint","mode","language","key","googleMapsApiKey","units","_origins","forEach","user","location","LOCATION","split","join","origins","destinations","googleMapsQuery","console","log","get","res","statusCode","body","on","chunk","mapsResponse","JSON","parse","timeToDestination","rows","elements","duration","text","numberOfMins","parseInt","client","accountSid","authToken","messages","create","from","mediaUrl","to","PHONE_NUMBER","message","sid","catch","error","err","send"],"mappings":"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","file":"MessageController.js","sourcesContent":["\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst typeorm_1 = require(\"typeorm\");\r\nconst User_1 = require(\"../entity/User\");\r\nconst sensitive_1 = require(\"../sensitive\");\r\nconst sensitive_2 = require(\"../sensitive\");\r\nfunction MessageController(request, response) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const userRepository = typeorm_1.getManager().getRepository(User_1.User);\r\n        const users = yield userRepository.find();\r\n        const https = require('https');\r\n        const googleMapsApiEndpoint = 'https://maps.googleapis.com/maps/api/distancematrix/json?';\r\n        const mode = '&mode=walking';\r\n        const language = '&language=en-EN';\r\n        const key = '&key=' + sensitive_2.googleMapsApiKey;\r\n        const units = 'units=imperial';\r\n        const _origins = '&origins=';\r\n        users.forEach(function (user) {\r\n            var location = user.LOCATION.split(' ').join('+');\r\n            var origins = _origins + location;\r\n            const destinations = '&destinations=' + location;\r\n            const googleMapsQuery = googleMapsApiEndpoint + units + origins + destinations + mode + language + key;\r\n            console.log(googleMapsQuery);\r\n            https.get(googleMapsQuery, (res) => {\r\n                console.log('statusCode:', res.statusCode);\r\n                var body = '';\r\n                res.on('data', function (chunk) {\r\n                    body += chunk;\r\n                });\r\n                res.on('end', function () {\r\n                    var mapsResponse = JSON.parse(body);\r\n                    console.log(\"Got a response: \", mapsResponse);\r\n                    var timeToDestination = mapsResponse.rows[0].elements[0].duration.text;\r\n                    var numberOfMins = parseInt(timeToDestination.split(' ')[0]);\r\n                    console.log(numberOfMins);\r\n                    if (numberOfMins < 15) {\r\n                        const client = require('twilio')(sensitive_1.accountSid, sensitive_1.authToken);\r\n                        client.messages\r\n                            .create({\r\n                            // this is message body for texting\r\n                            body: 'Welcome to Car Bar! The Car Bar closest to you is a ' + timeToDestination + ' walk away from you!',\r\n                            // this is CarBar's Twilio number\r\n                            from: '+19548668791',\r\n                            // add media to a message \r\n                            mediaUrl: 'https://raw.githubusercontent.com/Jac21/carbar-frontend/master/public/img/V1.png',\r\n                            // user's number\r\n                            to: user.PHONE_NUMBER\r\n                        })\r\n                            .then(message => console.log(message.sid))\r\n                            .catch(err => console.error(err));\r\n                        console.log(user.PHONE_NUMBER);\r\n                    }\r\n                    console.log(\"Time to CarBar: \" + timeToDestination);\r\n                    //response.send(mapsResponse);\r\n                });\r\n            }).on('error', (e) => {\r\n                console.error(e);\r\n            });\r\n            console.log(user.PHONE_NUMBER);\r\n        });\r\n        response.send('Send messages to all users within 15 mins walking distance');\r\n    });\r\n}\r\nexports.MessageController = MessageController;\r\n//# sourceMappingURL=MessageController.js.map"]}