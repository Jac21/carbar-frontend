{"version":3,"sources":["../../../server/src/controller/MessageController.js"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","typeorm_1","require","User_1","sensitive_1","sensitive_2","MessageController","request","response","client","accountSid","authToken","userRepository","getManager","getRepository","User","find","users","https","googleMapsApiEndpoint","destinations","mode","language","key","googleMapsApiKey","units","_origins","forEach","user","location","LOCATION","split","join","console","log","origins","googleMapsQuery","get","res","statusCode","body","on","chunk","mapsResponse","JSON","parse","timeToDestination","rows","elements","duration","text","numberOfMins","parseInt","messages","create","from","mediaUrl","to","PHONE_NUMBER","message","sid","catch","error","err","send"],"mappings":"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","file":"MessageController.js","sourcesContent":["\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst typeorm_1 = require(\"typeorm\");\r\nconst User_1 = require(\"../entity/User\");\r\nconst sensitive_1 = require(\"../sensitive\");\r\nconst sensitive_2 = require(\"../sensitive\");\r\nfunction MessageController(request, response) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const client = require('twilio')(sensitive_1.accountSid, sensitive_1.authToken);\r\n        const userRepository = typeorm_1.getManager().getRepository(User_1.User);\r\n        const users = yield userRepository.find();\r\n        const https = require('https');\r\n        const googleMapsApiEndpoint = 'https://maps.googleapis.com/maps/api/distancematrix/json?';\r\n        const destinations = '&destinations=11800+Domain+Blvd+Austin+TX';\r\n        const mode = '&mode=walking';\r\n        const language = '&language=en-EN';\r\n        const key = '&key=' + sensitive_2.googleMapsApiKey;\r\n        const units = 'units=imperial';\r\n        const _origins = '&origins=';\r\n        users.forEach(function (user) {\r\n            var location = user.LOCATION;\r\n            location = location.split(' ').join('+');\r\n            console.log(location);\r\n            var origins = _origins + location;\r\n            const googleMapsQuery = googleMapsApiEndpoint + units + origins + destinations + mode + language + key;\r\n            console.log(googleMapsQuery);\r\n            https.get(googleMapsQuery, (res) => {\r\n                console.log('statusCode:', res.statusCode);\r\n                var body = '';\r\n                res.on('data', function (chunk) {\r\n                    body += chunk;\r\n                });\r\n                res.on('end', function () {\r\n                    var mapsResponse = JSON.parse(body);\r\n                    console.log(\"Got a response: \", mapsResponse);\r\n                    var timeToDestination = mapsResponse.rows[0].elements[0].duration.text;\r\n                    var numberOfMins = parseInt(timeToDestination.split(' ')[0]);\r\n                    console.log(numberOfMins);\r\n                    if (numberOfMins < 15) {\r\n                        const client = require('twilio')(sensitive_1.accountSid, sensitive_1.authToken);\r\n                        client.messages\r\n                            .create({\r\n                            body: 'Welcome to Car Bar! The Car Bar closest to you is at the HomeAway Office in the Domain. It is a ' + timeToDestination + ' walk away from you!',\r\n                            from: '+15037147388',\r\n                            //Add media to a message \r\n                            mediaUrl: 'https://raw.githubusercontent.com/Jac21/carbar-frontend/master/public/img/V1.png',\r\n                            to: user.PHONE_NUMBER //Customer's number\r\n                        })\r\n                            .then(message => console.log(message.sid))\r\n                            .catch(err => console.error(err));\r\n                        console.log(user.PHONE_NUMBER);\r\n                    }\r\n                    console.log(\"Time to CarBar: \" + timeToDestination);\r\n                    //response.send(mapsResponse);\r\n                });\r\n            }).on('error', (e) => {\r\n                console.error(e);\r\n            });\r\n            console.log(user.PHONE_NUMBER);\r\n        });\r\n        response.send('Send messages to all users within 15 mins walking distance HomeAway');\r\n    });\r\n}\r\nexports.MessageController = MessageController;\r\n//# sourceMappingURL=MessageController.js.map"]}